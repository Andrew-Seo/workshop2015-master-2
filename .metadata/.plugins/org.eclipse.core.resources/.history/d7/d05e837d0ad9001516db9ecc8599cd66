package Level_2;

import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.Rectangle;
import java.util.Random;

import javax.swing.JOptionPane;
import javax.swing.JPanel;

public class Animation_Panel extends JPanel
{
	Pinger pinger;
	Blocks blocks;
	Ball ball;
	Atari_Breakout frum;
	Font Big;
	int spawnX = new Random().nextInt(975);
	int spawnY = 750;
	int lives = 5;
	boolean sound = true;

	Animation_Panel(Atari_Breakout x)
	{
		frum = x;
		pinger = new Pinger(800, 900, 400, 15);
		ball = new Ball(spawnX, spawnY, 20, 20);
		blocks = new Blocks(925, 450, 125, 50, false, Color.BLUE);
		Big = new Font("Times New Roman", Font.BOLD, 100);
	}

	public void paint(Graphics g)
	{

		g.fillRect(0, 0, 1900, 10000);

		for (int i = 0; i < Blocks.Blockamount - 1; i++)
		{
			g.setColor(Blocks.Blox[i].randommy);
			// g.setColor(new Color((int) (Math.random() * 255), (int)
			// (Math.random() * 255), (int) (Math.random() * 255)));
			g.fillRect(Blocks.Blox[i].x, Blocks.Blox[i].y, Blocks.Blox[i].width, Blocks.Blox[i].height);
		}

		pinger.paint(g);
		// blocks.paint(g);
		ball.paint(g);
		g.setColor(Color.WHITE);
		g.setFont(Big);
		g.drawString("Lives:" + lives, 50, 100);

	}

	private void checkcollisionbox()
	{
		Rectangle r1 = pinger.getCollisionBox();
		Rectangle r2 = ball.getCollisionBox();
		if (r1.intersects(r2))
		{
			ball.changeDirection();
		}
		// System.out.println(r2.getWidth());
		// System.out.println(r1.getWidth());
		// System.out.println(r2.getHeight());
		// System.out.println(r1.getHeight());
		for (int i = 0; i < Blocks.Blockamount - 1; i++)
		{
			if (r2.intersects(Blocks.Blox[i].x, Blocks.Blox[i].y, Blocks.Blox[i].width, Blocks.Blox[i].height))
			{
				frum.playSound("18529.wav");
				ball.changeDirection();
				if (blocks.Blox[i].breakable)
				{
					blocks.Blox[i].y = -100;
				}
			}
			if (r1.intersects(r2))
			{
				if (sound)
				{
					pinger.ChangeDirection();
					frum.playSound("18528.wav");
					sound = false;
				}
			} else
			{
				sound = true;
			}

		}

	}

	public void update()
	{
		ball.update();
		pinger.update();
		checkcollisionbox();
		if (ball.y > 1000)
		{
			ball.x = spawnX;
			ball.y = spawnY;
			lives = lives - 1;
		}
		if (lives == 0)
		{
			frum.playSound("18533.wav");
			JOptionPane.showMessageDialog(null, "YOU LOSE!!!");
			System.exit(0);
		}
		System.out.println(Blocks.Blox.length);
		boolean allbroken = true;
		for (int i = 0; i < Blocks.Blockamount - 1; i++)
		{
			if (Blocks.Blox[i].breakable)
			{
				if (Blocks.Blox[i].y != -100)
				{
					allbroken = false;
				}
			}
		}
		if (allbroken)
		{
			JOptionPane.showMessageDialog(null, "You WIN!!!");
			JOptionPane.showConfirmDialog(null, "Do you want to play again? If yes, then click the \"Yes\" button. If no, then click the \"No\" button. The \"Cancel\" button doesn't do anything. Hope you had Fun! ");
			System.exit(0);
		}
	}

	public void movePinger(int a)
	{
		pinger.x = a;

	}

}
